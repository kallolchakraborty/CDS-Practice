CLASS zcl_pract_amdp_002 DEFINITION PUBLIC.

  PUBLIC SECTION.
    INTERFACES if_amdp_marker_hdb.
    TYPES : BEGIN OF ty_details,
              TravelId   TYPE /dmo/travel_id,
              AgencyId   TYPE /dmo/agency_id,
              CustomerId TYPE /dmo/customer_id,
              BookingFee TYPE /dmo/booking_fee,
            END OF ty_details,
            " Table Type
            tt_details TYPE TABLE OF ty_details.

    CLASS-METHODS: get_details IMPORTING VALUE(im_select_op)      TYPE string
                               EXPORTING VALUE(ex_travel_details) TYPE tt_details.

ENDCLASS.



CLASS zcl_pract_amdp_002 IMPLEMENTATION.

  METHOD get_details BY DATABASE PROCEDURE FOR HDB LANGUAGE SQLSCRIPT OPTIONS READ-ONLY USING zprac_cds_001.

    /* Fetching the data from the CDS view with respect to the parameter: im_travel_id */
    EX_TRAVEL_DETAILS = SELECT TravelId,
                               AgencyId,
                               CustomerId,
                               BookingFee
                        FROM  ZPRAC_CDS_001;

    /* Apply filter in the internal table */
         ex_travel_details = APPLY_FILTER ( :ex_travel_details, :im_select_op );

    /* Alternatively: If the return parameter is similar to the table used */
   /*  ex_travel_details = APPLY_FILTER ( zprac_cds_001, :im_select_op ); */

  ENDMETHOD.

ENDCLASS.
/*
    Calling the AMDP from the report having select options
*/
    DATA lv_travel_id type /dmo/travel_id.
    SELECT-OPTIONS : s_travel_id for lv_travel_id. 

    "Converting the range table in to a string
    DATA(lv_value) = cl_shdb_seltab=>combine_seltabs(
      it_named_seltabs = VALUE #( ( name = '/dmo/travel_id' )
                                    dref = REF #( s_travel_id[] ) ) ).
                                    
     //Calling the AMDP by class
    CALL METHOD zclpract_amdp_001=>get_details 
        EXPORTING 
            IM_SELECT_OP = it_named_seltabs
        IMPORTING
            EX_TRAVEL_DETAILS =  DATA(LT_TRAVEL_DETAILS_01).        
   
